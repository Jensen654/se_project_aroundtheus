!function(){"use strict";class e{constructor(e,t,s,n,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=n,this._handleLikeClick=i,this._handleLikeDelete=r}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(),this._likeButton.classList.contains("card__like-button_active")?this._likeButton.classList.contains("card__like-button_active")&&this._handleLikeClick(this._id):this._handleLikeDelete(this._id)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}remove(){this._cardElement.remove()}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_getCardLike(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._isLiked||this._likeButton.classList.remove("card__like-button_active")}returnCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardDescription=this._cardElement.querySelector(".card__text"),this._cardImageElement=this._cardElement.querySelector(".card__img"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardDescription.textContent=this._name,this._getCardLike(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._options=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return Array.from(this._inputEls).every((e=>e.validity.valid))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(e){e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}enableValidation(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._inputEls.forEach((e=>{this._setEventListeners(e,this._submitButton)}))}}class s{constructor(e){this._popupElement=e,this._closeButton=this._popupElement.querySelector(".modal__close"),this._modalContainer=this._popupElement.querySelector(".js-modalContainer"),this._boundHandleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._boundHandleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._boundHandleEscapeClose)}_handleEscapeClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(()=>{this.close()})),this._modalContainer.addEventListener("click",(e=>{e.stopPropagation()}))}}class n extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelectorAll(".modal__container-input"),this._popupButton=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._popupButton.textContent="Saving...";const t=this._getInputValues();this._handleFormSubmit(t)}))}}const i={formSelector:".modal__container-form",inputSelector:".modal__container-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},r=document.querySelector("#card-modal"),o=document.querySelector("#edit-modal"),a=document.querySelector("#profile-image-modal"),l=o.querySelector(".modal__container-form"),c=r.querySelector(".modal__container-form"),d=a.querySelector(".modal__container-form"),u=document.querySelector("#image-modal"),_=document.querySelector("#trash-modal"),h=document.querySelector(".profile__image"),m=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__image_edit-button"),E=document.querySelector(".profile__add-button"),C=document.querySelector(".profile__title"),v=document.querySelector(".profile__description"),f=o.querySelector("#modal-name"),S=o.querySelector("#modal-description"),k=a.querySelector(".modal__container-input"),b=r.querySelector(".modal__button"),L=o.querySelector(".modal__button"),y=_.querySelector(".modal__button"),g=document.querySelector(".cards__list"),q=new t(i,l),I=new t(i,c),B=new t(i,d);q.enableValidation(),I.enableValidation(),B.enableValidation();const P=new class extends s{constructor(e){super(e)}open(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__image-description");t.src=e.link,t.alt=e.name,s.textContent=e.name,super.open()}}(u);P.setEventListeners();const $=new n(o,(function(e){w.updateProfileInfo({name:e.title,about:e.description}).then((()=>{U.setUserInfo({nameInput:e.title,descriptionInput:e.description}),$.close(),setTimeout((()=>{L.textContent="Save"}),500)}))})),x=new n(r,(function(e){const t=e.title,s=e.description;w.addCard({name:t,link:s}).then((()=>{H({name:t,link:s}),x.close(),c.reset(),I.toggleButtonState(),setTimeout((()=>{b.textContent="Create"}),500)}))}));$.setEventListeners(),x.setEventListeners();const j=new class extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelector(".modal__container-input")}_getInputValues(){return this._inputList.value}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset()}))}}(a,(function(e){h.src=k.value,w.updateProfilePic(e),j.close()}));j.setEventListeners();const D=new class extends s{constructor(e){super(e),this._deleteCardForm=this._popupElement.querySelector(".modal__container"),this._deleteCardButton=this._popupElement.querySelector(".modal__button")}setEventListeners(){super.setEventListeners(),this._deleteCardForm.addEventListener("submit",(e=>{e.preventDefault(),this._deleteCardButton.textContent="Saving...",this._handleDeleteCardFormSubmit(),this.close()}))}setSubmitAction(e){this._handleDeleteCardFormSubmit=e}}(_,(function(e){w.deleteCard(e._id).then((()=>{e.remove(),setTimeout((()=>{y.textContent="Yes"}),500)}))}));D.setEventListeners();const U=new class{constructor(e){let{nameContainer:t,descriptionContainer:s}=e;this._nameContainer=t,this._descriptionContainer=s}getUserInfo(){const e={};return e.profileName=this._nameContainer.textContent,e.profileDescription=this._descriptionContainer.textContent,e}setUserInfo(e){this._nameContainer.textContent=e.nameInput,this._descriptionContainer.textContent=e.descriptionInput}}({nameContainer:C,descriptionContainer:v}),w=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}toggleCardLike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}toggleCardDislike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getProfileInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateProfilePic(e){fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1755563a-df02-4ecd-aa91-5c5958bedadf","Content-Type":"application/json"}}),F=new class{constructor(e,t){let{renderer:s}=e;this._render=s,this._container=t}renderItems(e){e.forEach((e=>this._render(e)))}addItem(e){this._container.prepend(e)}}({renderer:H},g);function V(e){P.open(e)}function T(e){D.open(),D.setSubmitAction((()=>{w.deleteCard(e._id).then((()=>{e.remove(),setTimeout((()=>{y.textContent="Yes"}),500)}))}))}function A(e){w.toggleCardLike(e)}function N(e){w.toggleCardDislike(e)}function H(t){const s=new e(t,".card-template",V,T,A,N).returnCardElement();F.addItem(s)}w.getInitialCards().then((e=>{F.renderItems(e)})),w.getProfileInfo().then((e=>(h.src=e.avatar,U.setUserInfo({nameInput:e.name,descriptionInput:e.about})))),m.addEventListener("click",(function(e){!function(){const e=U.getUserInfo();f.value=e.profileName,S.value=e.profileDescription}(),$.open()})),E.addEventListener("click",(e=>{x.open()})),p.addEventListener("click",(()=>{j.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FFZDdDLEVBQVNDLFlBQVksQ0FDMUJDLFVBQVc2QixFQUFJbEssS0FDZnNJLGlCQUFrQjRCLEVBQUlsQyxXQWlIMUJ0QixFQUFrQjdGLGlCQUFpQixTQUFTLFNBQVV1RSxJQXZHdEQsV0FDRSxNQUFNNkcsRUFBUzlELEVBQVN3QixjQUV4QjVDLEVBQWlCakIsTUFBUW1HLEVBQU9wRixZQUNoQ0csRUFBd0JsQixNQUFRbUcsRUFBT25GLGtCQUN6QyxDQW1HRW9GLEdBQ0F0RSxFQUFpQjdDLE1BQ25CLElBRUE2QixFQUFXL0YsaUJBQWlCLFNBQVV1RSxJQUNwQ29ELEVBQWN6RCxNQUFNLElBR3RCNEIsRUFBdUI5RixpQkFBaUIsU0FBUyxLQUMvQytILEVBQXNCN0QsTUFBTSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhQcm9maWxlUGljRm9ybS5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgZGF0YSxcclxuICAgIGNhcmRTZWxlY3RvcixcclxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDbGljayxcclxuICAgIGhhbmRsZUxpa2VDbGljayxcclxuICAgIGhhbmRsZUxpa2VEZWxldGVcclxuICApIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcclxuICAgIHRoaXMuX2lzTGlrZWQgPSBkYXRhLmlzTGlrZWQ7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlRGVsZXRlID0gaGFuZGxlTGlrZURlbGV0ZTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soeyBuYW1lOiB0aGlzLl9uYW1lLCBsaW5rOiB0aGlzLl9saW5rIH0pXHJcbiAgICApO1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCk7XHJcbiAgICAgIGlmICghdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIikpIHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlRGVsZXRlKHRoaXMuX2lkKTtcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKVxyXG4gICAgICApIHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcy5faWQpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAvLyB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlTGlrZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9nZXRDYXJkTGlrZSgpIHtcclxuICAgIGlmICh0aGlzLl9pc0xpa2VkKSB7XHJcbiAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH0gZWxzZSBpZiAoIXRoaXMuX2lzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuQ2FyZEVsZW1lbnQoKSB7XHJcbiAgICAvL2dldCBjYXJkIHZpZXdcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190cmFzaC1idXR0b25cIik7XHJcbiAgICB0aGlzLl9jYXJkRGVzY3JpcHRpb24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RleHRcIik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbGVtZW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWdcIik7XHJcblxyXG4gICAgLy9jYXJkIGltYWdlIGFuZCBzb3VyY2VcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2NhcmREZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgdGhpcy5fZ2V0Q2FyZExpa2UoKTtcclxuXHJcbiAgICAvL3NldCBldmVudCBsaXN0ZW5lcnNcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAvL3JldHVybiBjYXJkXHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcclxuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBvcHRpb25zLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IG9wdGlvbnMuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gb3B0aW9ucy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gb3B0aW9ucy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gb3B0aW9ucy5lcnJvckNsYXNzO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYCMke2lucHV0RWwuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfY2hlY2tGb3JtVmFsaWRpdHkoKSB7XHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9pbnB1dEVscykuZXZlcnkoKGlucHV0KSA9PiBpbnB1dC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGNvbnN0IGZvdW5kSW52YWxpZCA9ICF0aGlzLl9jaGVja0Zvcm1WYWxpZGl0eSgpO1xyXG5cclxuICAgIGlmIChmb3VuZEludmFsaWQpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoaW5wdXRFbCkge1xyXG4gICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCk7XHJcbiAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2lucHV0RWxzID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yXHJcbiAgICApO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyhpbnB1dEVsLCB0aGlzLl9zdWJtaXRCdXR0b24pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBwb3B1cFNlbGVjdG9yO1xyXG5cclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5cclxuICAgIHRoaXMuX21vZGFsQ29udGFpbmVyID1cclxuICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuanMtbW9kYWxDb250YWluZXJcIik7XHJcblxyXG4gICAgdGhpcy5fYm91bmRIYW5kbGVFc2NhcGVDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY2FwZUNsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9ib3VuZEhhbmRsZUVzY2FwZUNsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9ib3VuZEhhbmRsZUVzY2FwZUNsb3NlKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NhcGVDbG9zZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX21vZGFsQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19jb250YWluZXItZm9ybVwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFxyXG4gICAgICBcIi5tb2RhbF9fY29udGFpbmVyLWlucHV0XCJcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgZGF0YSA9IHt9O1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBkYXRhW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9wb3B1cEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICAgIGNvbnN0IGZvcm1EYXRhID0gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdChmb3JtRGF0YSk7XHJcbiAgICAgIC8vIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gIH0sXHJcbl07XHJcblxyXG5jb25zdCBvcHRpb25zID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2NvbnRhaW5lci1mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2NvbnRhaW5lci1pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuXHJcbmV4cG9ydCB7IGluaXRpYWxDYXJkcywgb3B0aW9ucyB9O1xyXG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzLCBvcHRpb25zIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRGVsZXRlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aERlbGV0ZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoUHJvZmlsZVBpY0Zvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoUHJvZmlsZVBpY0Zvcm0uanNcIjtcclxuXHJcbi8vTWFpbiBTZWxlY3RvcnNcclxuY29uc3QgZWRpdENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1tb2RhbFwiKTtcclxuY29uc3QgZWRpdFByb2ZpbGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1tb2RhbFwiKTtcclxuY29uc3QgcHJvZmlsZUltYWdlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtaW1hZ2UtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcclxuICBcIi5tb2RhbF9fY29udGFpbmVyLWZvcm1cIlxyXG4pO1xyXG5jb25zdCBjYXJkRWRpdEZvcm0gPSBlZGl0Q2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NvbnRhaW5lci1mb3JtXCIpO1xyXG5jb25zdCBwcm9maWxlSW1hZ2VFZGl0Rm9ybSA9IHByb2ZpbGVJbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubW9kYWxfX2NvbnRhaW5lci1mb3JtXCJcclxuKTtcclxuY29uc3QgcHJldmlld0ltYWdlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLW1vZGFsXCIpO1xyXG5jb25zdCBkZWxldGVDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RyYXNoLW1vZGFsXCIpO1xyXG5jb25zdCBwcm9maWxlUGljID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKTtcclxuLy9CdXR0b25zXHJcbmNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZUltYWdlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9faW1hZ2VfZWRpdC1idXR0b25cIlxyXG4pO1xyXG5jb25zdCBhZGROZXdDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG4vL0Zvcm0gRGF0YVxyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcbmNvbnN0IHByb2ZpbGVOYW1lSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjbW9kYWwtbmFtZVwiKTtcclxuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPVxyXG4gIGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1kZXNjcmlwdGlvblwiKTtcclxuY29uc3QgcHJvZmlsZVBpY01vZGFsSW5wdXQgPSBwcm9maWxlSW1hZ2VNb2RhbC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLm1vZGFsX19jb250YWluZXItaW5wdXRcIlxyXG4pO1xyXG5jb25zdCBhZGRDYXJkQnV0dG9uID0gZWRpdENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XHJcbmNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XHJcbmNvbnN0IGRlbGV0ZUNhcmRCdXR0b24gPSBkZWxldGVDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xyXG4vL0NhcmQgdGVtcGxhdGVcclxuY29uc3QgY2FyZExpc3RFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XHJcblxyXG4vL1xyXG4vL0NsYXNzIGluc3RhbnRpYXRvcnNcclxuXHJcbi8vRm9ybVZhbGlkYXRvciBjbGFzc1xyXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKG9wdGlvbnMsIHByb2ZpbGVFZGl0Rm9ybSk7XHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihvcHRpb25zLCBjYXJkRWRpdEZvcm0pO1xyXG5jb25zdCBwcm9maWxlUGljRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIG9wdGlvbnMsXHJcbiAgcHJvZmlsZUltYWdlRWRpdEZvcm1cclxuKTtcclxuXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbnByb2ZpbGVQaWNGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8vUG9wdXBXaXRoSW1hZ2UgQ2xhc3NcclxuY29uc3QgcG9wdXBQcmV2aWV3SW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UocHJldmlld0ltYWdlTW9kYWwpO1xyXG5wb3B1cFByZXZpZXdJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9Qb3B1cFdpdGhGb3JtIENsYXNzXHJcbmNvbnN0IHBvcHVwUHJvZmlsZUZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBlZGl0UHJvZmlsZU1vZGFsLFxyXG4gIGhhbmRsZVByb2ZpbGVGb3JtU3VibWl0XHJcbik7XHJcbmNvbnN0IHBvcHVwQ2FyZEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShlZGl0Q2FyZE1vZGFsLCBoYW5kbGVDYXJkRm9ybVN1Ym1pdCk7XHJcbnBvcHVwUHJvZmlsZUZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucG9wdXBDYXJkRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9Qb3B1cFdpdGhQcm9maWxlUGljRm9ybVxyXG5jb25zdCBwb3B1cFByb2ZpbGVJbWFnZUZvcm0gPSBuZXcgUG9wdXBXaXRoUHJvZmlsZVBpY0Zvcm0oXHJcbiAgcHJvZmlsZUltYWdlTW9kYWwsXHJcbiAgaGFuZGxlUHJvZmlsZUltYWdlRm9ybVN1Ym1pdFxyXG4pO1xyXG5wb3B1cFByb2ZpbGVJbWFnZUZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vUG9wdXBXaXRoRGVsZXRlIENsYXNzXHJcbmNvbnN0IHBvcHVwV2l0aERlbGV0ZUNhcmQgPSBuZXcgUG9wdXBXaXRoRGVsZXRlKFxyXG4gIGRlbGV0ZUNhcmRNb2RhbCxcclxuICBoYW5kbGVEZWxldGVDYXJkRm9ybVN1Ym1pdFxyXG4pO1xyXG5wb3B1cFdpdGhEZWxldGVDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL1VzZXJJbmZvIENsYXNzXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lQ29udGFpbmVyOiBwcm9maWxlTmFtZSxcclxuICBkZXNjcmlwdGlvbkNvbnRhaW5lcjogcHJvZmlsZURlc2NyaXB0aW9uLFxyXG59KTtcclxuXHJcbi8vQXBpIENsYXNzXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcIjE3NTU1NjNhLWRmMDItNGVjZC1hYTkxLTVjNTk1OGJlZGFkZlwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG4vL1NlY3Rpb24gQ2xhc3NcclxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKHsgcmVuZGVyZXI6IHJlbmRlckNhcmQgfSwgY2FyZExpc3RFbCk7XHJcblxyXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoY2FyZEl0ZW1zKSA9PiB7XHJcbiAgc2VjdGlvbi5yZW5kZXJJdGVtcyhjYXJkSXRlbXMpO1xyXG59KTtcclxuXHJcbmFwaS5nZXRQcm9maWxlSW5mbygpLnRoZW4oKHJlcykgPT4ge1xyXG4gIHByb2ZpbGVQaWMuc3JjID0gcmVzLmF2YXRhcjtcclxuXHJcbiAgcmV0dXJuIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcclxuICAgIG5hbWVJbnB1dDogcmVzLm5hbWUsXHJcbiAgICBkZXNjcmlwdGlvbklucHV0OiByZXMuYWJvdXQsXHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuLy8gaW5pdGlhbENhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcclxuLy8gICBhcGkuYWRkQ2FyZChjYXJkKTtcclxuLy8gfSk7XHJcblxyXG4vL1xyXG4vL0Z1bmN0aW9uc1xyXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUlucHV0cygpIHtcclxuICBjb25zdCBpbnB1dHMgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG5cclxuICBwcm9maWxlTmFtZUlucHV0LnZhbHVlID0gaW5wdXRzLnByb2ZpbGVOYW1lO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gaW5wdXRzLnByb2ZpbGVEZXNjcmlwdGlvbjtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQoZGF0YSkge1xyXG4gIGFwaVxyXG4gICAgLnVwZGF0ZVByb2ZpbGVJbmZvKHtcclxuICAgICAgbmFtZTogZGF0YS50aXRsZSxcclxuICAgICAgYWJvdXQ6IGRhdGEuZGVzY3JpcHRpb24sXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgICAgbmFtZUlucHV0OiBkYXRhLnRpdGxlLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uSW5wdXQ6IGRhdGEuZGVzY3JpcHRpb24sXHJcbiAgICAgIH0pO1xyXG4gICAgICBwb3B1cFByb2ZpbGVGb3JtLmNsb3NlKCk7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGVkaXRQcm9maWxlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XHJcbiAgICAgIH0sIDUwMCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZEZvcm1TdWJtaXQoZGF0YSkge1xyXG4gIGNvbnN0IG5hbWUgPSBkYXRhLnRpdGxlO1xyXG4gIGNvbnN0IGxpbmsgPSBkYXRhLmRlc2NyaXB0aW9uO1xyXG4gIGFwaS5hZGRDYXJkKHsgbmFtZTogbmFtZSwgbGluazogbGluayB9KS50aGVuKCgpID0+IHtcclxuICAgIHJlbmRlckNhcmQoeyBuYW1lLCBsaW5rIH0pO1xyXG4gICAgcG9wdXBDYXJkRm9ybS5jbG9zZSgpO1xyXG4gICAgY2FyZEVkaXRGb3JtLnJlc2V0KCk7XHJcbiAgICBhZGRGb3JtVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgYWRkQ2FyZEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ3JlYXRlXCI7XHJcbiAgICB9LCA1MDApO1xyXG4gIH0pO1xyXG4gIC8vIHJlbmRlckNhcmQoeyBuYW1lLCBsaW5rIH0pO1xyXG4gIC8vIHBvcHVwQ2FyZEZvcm0uY2xvc2UoKTtcclxuICAvLyBjYXJkRWRpdEZvcm0ucmVzZXQoKTtcclxuICAvLyBhZGRGb3JtVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmRGb3JtU3VibWl0KGNhcmRFbCkge1xyXG4gIGFwaS5kZWxldGVDYXJkKGNhcmRFbC5faWQpLnRoZW4oKCkgPT4ge1xyXG4gICAgY2FyZEVsLnJlbW92ZSgpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGRlbGV0ZUNhcmRCdXR0b24udGV4dENvbnRlbnQgPSBcIlllc1wiO1xyXG4gICAgfSwgNTAwKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUltYWdlRm9ybVN1Ym1pdChkYXRhKSB7XHJcbiAgcHJvZmlsZVBpYy5zcmMgPSBwcm9maWxlUGljTW9kYWxJbnB1dC52YWx1ZTtcclxuXHJcbiAgYXBpLnVwZGF0ZVByb2ZpbGVQaWMoZGF0YSk7XHJcblxyXG4gIHBvcHVwUHJvZmlsZUltYWdlRm9ybS5jbG9zZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKGRhdGEpIHtcclxuICBwb3B1cFByZXZpZXdJbWFnZS5vcGVuKGRhdGEpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayhjYXJkRWwpIHtcclxuICBwb3B1cFdpdGhEZWxldGVDYXJkLm9wZW4oKTtcclxuICAvLyBjYWxsIGhhbmRsZURlbGV0ZUNhcmQuLi5cclxuICBwb3B1cFdpdGhEZWxldGVDYXJkLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICAvLyBoYW5kbGUgZGVsZXRpb25cclxuICAgIGFwaS5kZWxldGVDYXJkKGNhcmRFbC5faWQpLnRoZW4oKCkgPT4ge1xyXG4gICAgICBjYXJkRWwucmVtb3ZlKCk7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZUNhcmRCdXR0b24udGV4dENvbnRlbnQgPSBcIlllc1wiO1xyXG4gICAgICB9LCA1MDApO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIGNhbGwgc2V0RXZlbnRMaXN0ZW5lcnMgb24gaW5zdGFudGlhdGlvblxyXG4gIC8vIHBvcHVwV2l0aERlbGV0ZUNhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoY2FyZEVsKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmRJZCkge1xyXG4gIGFwaS50b2dnbGVDYXJkTGlrZShjYXJkSWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEaXNsaWtlQ2xpY2soY2FyZElkKSB7XHJcbiAgYXBpLnRvZ2dsZUNhcmREaXNsaWtlKGNhcmRJZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoY2FyZERhdGEpIHtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBcIi5jYXJkLXRlbXBsYXRlXCIsXHJcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxyXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2ssXHJcbiAgICBoYW5kbGVMaWtlQ2xpY2ssXHJcbiAgICBoYW5kbGVEaXNsaWtlQ2xpY2tcclxuICApLnJldHVybkNhcmRFbGVtZW50KCk7XHJcbiAgc2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcclxufVxyXG5cclxuLy9cclxuLy9FdmVudCBMaXN0ZW5lcnNcclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gIGZpbGxQcm9maWxlSW5wdXRzKCk7XHJcbiAgcG9wdXBQcm9maWxlRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYWRkTmV3Q2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcbiAgcG9wdXBDYXJkRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG5cclxucHJvZmlsZUltYWdlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIHBvcHVwUHJvZmlsZUltYWdlRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgb3BlbihkYXRhKSB7XHJcbiAgICBjb25zdCBwcmV2aWV3SW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICBjb25zdCBwcmV2aWV3RGVzY3JpcHRpb24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIubW9kYWxfX2ltYWdlLWRlc2NyaXB0aW9uXCJcclxuICAgICk7XHJcblxyXG4gICAgcHJldmlld0ltYWdlLnNyYyA9IGRhdGEubGluaztcclxuICAgIHByZXZpZXdJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XHJcbiAgICBwcmV2aWV3RGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoUHJvZmlsZVBpY0Zvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19jb250YWluZXItZm9ybVwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5tb2RhbF9fY29udGFpbmVyLWlucHV0XCJcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBkYXRhID0gdGhpcy5faW5wdXRMaXN0LnZhbHVlO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgY29uc3QgZm9ybURhdGEgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGZvcm1EYXRhKTtcclxuICAgICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhEZWxldGUgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5fZGVsZXRlQ2FyZEZvcm0gPVxyXG4gICAgICB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY29udGFpbmVyXCIpO1xyXG5cclxuICAgIHRoaXMuX2RlbGV0ZUNhcmRCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2RlbGV0ZUNhcmRGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5fZGVsZXRlQ2FyZEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmRGb3JtU3VibWl0KCk7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0QWN0aW9uKGFjdGlvbikge1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZEZvcm1TdWJtaXQgPSBhY3Rpb247XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVDb250YWluZXIsIGRlc2NyaXB0aW9uQ29udGFpbmVyIH0pIHtcclxuICAgIHRoaXMuX25hbWVDb250YWluZXIgPSBuYW1lQ29udGFpbmVyO1xyXG4gICAgdGhpcy5fZGVzY3JpcHRpb25Db250YWluZXIgPSBkZXNjcmlwdGlvbkNvbnRhaW5lcjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgY29uc3QgZGF0YSA9IHt9O1xyXG4gICAgZGF0YVtcInByb2ZpbGVOYW1lXCJdID0gdGhpcy5fbmFtZUNvbnRhaW5lci50ZXh0Q29udGVudDtcclxuICAgIGRhdGFbXCJwcm9maWxlRGVzY3JpcHRpb25cIl0gPSB0aGlzLl9kZXNjcmlwdGlvbkNvbnRhaW5lci50ZXh0Q29udGVudDtcclxuXHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcclxuICAgIHRoaXMuX25hbWVDb250YWluZXIudGV4dENvbnRlbnQgPSBkYXRhLm5hbWVJbnB1dDtcclxuICAgIHRoaXMuX2Rlc2NyaXB0aW9uQ29udGFpbmVyLnRleHRDb250ZW50ID0gZGF0YS5kZXNjcmlwdGlvbklucHV0O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRDYXJkKGJvZHkpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVDYXJkTGlrZShjYXJkSWQpIHtcclxuICAgIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZUNhcmREaXNsaWtlKGNhcmRJZCkge1xyXG4gICAgZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0UHJvZmlsZUluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlUHJvZmlsZUluZm8oYm9keSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlUHJvZmlsZVBpYyhhdmF0YXIpIHtcclxuICAgIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXIpIHtcclxuICAgIHRoaXMuX3JlbmRlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcclxuICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3JlbmRlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVMaWtlRGVsZXRlIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsIl9pc0xpa2VkIiwiaXNMaWtlZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfaGFuZGxlTGlrZURlbGV0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkSW1hZ2VFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlQnV0dG9uIiwiX2hhbmRsZUxpa2VCdXR0b24iLCJjbGFzc0xpc3QiLCJjb250YWlucyIsIl9kZWxldGVCdXR0b24iLCJyZW1vdmUiLCJfY2FyZEVsZW1lbnQiLCJ0b2dnbGUiLCJfZ2V0Q2FyZExpa2UiLCJhZGQiLCJyZXR1cm5DYXJkRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfY2FyZERlc2NyaXB0aW9uIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJGb3JtVmFsaWRhdG9yIiwib3B0aW9ucyIsImZvcm1FbGVtZW50IiwiX29wdGlvbnMiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsIiwiZXJyb3JNZXNzYWdlRWwiLCJpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfY2hlY2tGb3JtVmFsaWRpdHkiLCJBcnJheSIsImZyb20iLCJfaW5wdXRFbHMiLCJldmVyeSIsImlucHV0IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJlbmFibGVWYWxpZGF0aW9uIiwicXVlcnlTZWxlY3RvckFsbCIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiZm9yRWFjaCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfY2xvc2VCdXR0b24iLCJfbW9kYWxDb250YWluZXIiLCJfYm91bmRIYW5kbGVFc2NhcGVDbG9zZSIsIl9oYW5kbGVFc2NhcGVDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJldmVudCIsInN0b3BQcm9wYWdhdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJfaW5wdXRMaXN0IiwiX3BvcHVwQnV0dG9uIiwiX2dldElucHV0VmFsdWVzIiwidmFsdWUiLCJmb3JtRGF0YSIsImZvcm1TZWxlY3RvciIsImVkaXRDYXJkTW9kYWwiLCJlZGl0UHJvZmlsZU1vZGFsIiwicHJvZmlsZUltYWdlTW9kYWwiLCJwcm9maWxlRWRpdEZvcm0iLCJjYXJkRWRpdEZvcm0iLCJwcm9maWxlSW1hZ2VFZGl0Rm9ybSIsInByZXZpZXdJbWFnZU1vZGFsIiwiZGVsZXRlQ2FyZE1vZGFsIiwicHJvZmlsZVBpYyIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUltYWdlRWRpdEJ1dHRvbiIsImFkZE5ld0NhcmQiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsInByb2ZpbGVOYW1lSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsInByb2ZpbGVQaWNNb2RhbElucHV0IiwiYWRkQ2FyZEJ1dHRvbiIsImVkaXRQcm9maWxlQnV0dG9uIiwiZGVsZXRlQ2FyZEJ1dHRvbiIsImNhcmRMaXN0RWwiLCJlZGl0Rm9ybVZhbGlkYXRvciIsImFkZEZvcm1WYWxpZGF0b3IiLCJwcm9maWxlUGljRm9ybVZhbGlkYXRvciIsInBvcHVwUHJldmlld0ltYWdlIiwicHJldmlld0ltYWdlIiwicHJldmlld0Rlc2NyaXB0aW9uIiwicG9wdXBQcm9maWxlRm9ybSIsImFwaSIsInVwZGF0ZVByb2ZpbGVJbmZvIiwidGl0bGUiLCJhYm91dCIsImRlc2NyaXB0aW9uIiwidGhlbiIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJuYW1lSW5wdXQiLCJkZXNjcmlwdGlvbklucHV0Iiwic2V0VGltZW91dCIsInBvcHVwQ2FyZEZvcm0iLCJhZGRDYXJkIiwicmVuZGVyQ2FyZCIsInJlc2V0IiwicG9wdXBQcm9maWxlSW1hZ2VGb3JtIiwidXBkYXRlUHJvZmlsZVBpYyIsInBvcHVwV2l0aERlbGV0ZUNhcmQiLCJfZGVsZXRlQ2FyZEZvcm0iLCJfZGVsZXRlQ2FyZEJ1dHRvbiIsIl9oYW5kbGVEZWxldGVDYXJkRm9ybVN1Ym1pdCIsInNldFN1Ym1pdEFjdGlvbiIsImFjdGlvbiIsImNhcmRFbCIsImRlbGV0ZUNhcmQiLCJfcmVmIiwibmFtZUNvbnRhaW5lciIsImRlc2NyaXB0aW9uQ29udGFpbmVyIiwiX25hbWVDb250YWluZXIiLCJfZGVzY3JpcHRpb25Db250YWluZXIiLCJnZXRVc2VySW5mbyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImJvZHkiLCJtZXRob2QiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwidG9nZ2xlQ2FyZExpa2UiLCJ0b2dnbGVDYXJkRGlzbGlrZSIsImdldFByb2ZpbGVJbmZvIiwiYXZhdGFyIiwiYXV0aG9yaXphdGlvbiIsInNlY3Rpb24iLCJjb250YWluZXIiLCJyZW5kZXJlciIsIl9yZW5kZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJpdGVtcyIsIml0ZW0iLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJoYW5kbGVEaXNsaWtlQ2xpY2siLCJjYXJkRGF0YSIsImNhcmRFbGVtZW50IiwiY2FyZEl0ZW1zIiwiaW5wdXRzIiwiZmlsbFByb2ZpbGVJbnB1dHMiXSwic291cmNlUm9vdCI6IiJ9