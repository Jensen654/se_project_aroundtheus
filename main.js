!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteButton()))}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}returnCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardDescription=this._cardElement.querySelector(".card__text"),this._cardImageElement=this._cardElement.querySelector(".card__img"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardDescription.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._options=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return Array.from(this._inputEls).every((e=>e.validity.valid))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(e){e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}enableValidation(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._inputEls.forEach((e=>{this._setEventListeners(e,this._submitButton)}))}}class s{constructor(e){this._popupElement=e,this._closeButton=this._popupElement.querySelector(".modal__close"),this._modalContainer=this._popupElement.querySelector(".js-modalContainer"),this._boundHandleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._boundHandleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._boundHandleEscapeClose)}_handleEscapeClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(()=>{this.close()})),this._modalContainer.addEventListener("click",(e=>{e.stopPropagation()}))}}class n extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelectorAll(".modal__container-input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset()}))}}const i={formSelector:".modal__container-form",inputSelector:".modal__container-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"};class r{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject()}))}addCard(e){fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.json())).then((e=>{console.log(e)}))}deleteCard(e){fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.json())).then((e=>{console.log(e)}))}toggleCardLike(e){fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers}).then((e=>e.json())).then((t=>{t.isLiked?t.isLiked&&fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}):fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}))}updateProfileInfo(e){fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.json())).then((e=>{console.log(e)}))}updateProfilePic(e){fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}}new r({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c56e30dc-2883-4270-a59e-b2f7bae969c6","Content-Type":"application/json"}});const o=document.querySelector("#card-modal"),a=document.querySelector("#edit-modal"),l=a.querySelector(".modal__container-form"),c=o.querySelector(".modal__container-form"),d=document.querySelector("#image-modal"),h=document.querySelector(".profile__edit-button"),u=document.querySelector(".profile__add-button"),_=(document.querySelector(".card__trash-button"),document.querySelector(".profile__title")),m=document.querySelector(".profile__description"),p=a.querySelector("#modal-name"),E=a.querySelector("#modal-description"),f=document.querySelector(".cards__list"),C=new t(i,l),b=new t(i,c);C.enableValidation(),b.enableValidation();const v=new class extends s{constructor(e){super(e)}open(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__image-description");t.src=e.link,t.alt=e.name,s.textContent=e.name,super.open()}}(d);v.setEventListeners();const y=new n(a,(function(e){g.setUserInfo({nameInput:e.title,descriptionInput:e.description}),k.updateProfileInfo({name:e.title,about:e.description}),y.close()})),S=new n(o,(function(e){const t=e.title,s=e.description;B({name:t,link:s}),S.close(),c.reset(),b.toggleButtonState(),k.addCard({name:t,link:s})}));y.setEventListeners(),S.setEventListeners();const g=new class{constructor(e){let{nameContainer:t,descriptionContainer:s}=e;this._nameContainer=t,this._descriptionContainer=s}getUserInfo(){const e={};return e.profileName=this._nameContainer.textContent,e.profileDescription=this._descriptionContainer.textContent,e}setUserInfo(e){this._nameContainer.textContent=e.nameInput,this._descriptionContainer.textContent=e.descriptionInput}}({nameContainer:_,descriptionContainer:m}),k=new r({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1755563a-df02-4ecd-aa91-5c5958bedadf","Content-Type":"application/json"}}),L=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._render=n,this._container=t}renderItems(){this._items.forEach((e=>{this._render(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:B},f);function w(e){v.open(e)}function B(t){const s=new e(t,".card-template",w).returnCardElement();L.addItem(s)}L.renderItems(),k.getInitialCards().then((e=>{e.forEach((e=>{B(e)}))})),h.addEventListener("click",(function(e){!function(){const e=g.getUserInfo();p.value=e.profileName,E.value=e.profileDescription}(),y.open()})),u.addEventListener("click",(e=>{S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,