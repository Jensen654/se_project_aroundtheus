!function(){"use strict";class t{constructor(t,e,n){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=n}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteButton()))}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}returnCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardDescription=this._cardElement.querySelector(".card__text"),this._cardImageElement=this._cardElement.querySelector(".card__img"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardDescription.textContent=this._name,this._setEventListeners(),this._cardElement}}class e{constructor(t,e){this._options=t,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e}_showInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_checkFormValidity(){return Array.from(this._inputEls).every((t=>t.validity.valid))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(t){t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}enableValidation(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._inputEls.forEach((t=>{this._setEventListeners(t,this._submitButton)}))}}class n{constructor(t){this._popupElement=t,this._closeButton=this._popupElement.querySelector(".modal__close"),this._modalContainer=this._popupElement.querySelector(".js-modalContainer"),this._boundHandleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._boundHandleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._boundHandleEscapeClose)}_handleEscapeClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(()=>{this.close()})),this._modalContainer.addEventListener("click",(t=>{t.stopPropagation()}))}}class s extends n{constructor(t,e){super(t),this._handleFormSubmit=e,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelectorAll(".modal__container-input")}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e),this._popupForm.reset()}))}}const i={formSelector:".modal__container-form",inputSelector:".modal__container-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},o=document.querySelector("#card-modal"),r=document.querySelector("#edit-modal"),a=r.querySelector(".modal__container-form"),l=o.querySelector(".modal__container-form"),c=document.querySelector("#image-modal"),u=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__add-button"),m=document.querySelector(".profile__title"),_=document.querySelector(".profile__description"),p=r.querySelector("#modal-name"),h=r.querySelector("#modal-description"),E=document.querySelector(".cards__list"),v=new e(i,a),C=new e(i,l);v.enableValidation(),C.enableValidation();const S=new class extends n{constructor(t){super(t)}open(t){const e=this._popupElement.querySelector(".modal__image"),n=this._popupElement.querySelector(".modal__image-description");e.src=t.link,e.alt=t.name,n.textContent=t.name,super.open()}}(c);S.setEventListeners();const f=new s(r,(function(t){L.setUserInfo({nameInput:t.title,descriptionInput:t.description}),f.close()})),y=new s(o,(function(t){b({name:t.title,link:t.description}),y.close(),l.reset(),C.toggleButtonState()}));f.setEventListeners(),y.setEventListeners();const k=new class{constructor(t,e){let{items:n,renderer:s}=t;this._items=n,this._render=s,this._container=e}renderItems(){this._items.forEach((t=>{this._render(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:b},E);k.renderItems();const L=new class{constructor(t){let{nameContainer:e,descriptionContainer:n}=t;this._nameContainer=e,this._descriptionContainer=n}getUserInfo(){const t={};return t.profileName=this._nameContainer.textContent,t.profileDescription=this._descriptionContainer.textContent,t}setUserInfo(t){this._nameContainer.textContent=t.nameInput,this._descriptionContainer.textContent=t.descriptionInput}}({nameContainer:m,descriptionContainer:_});function g(t){S.open(t)}function b(e){const n=new t(e,".card-template",g).returnCardElement();k.addItem(n)}u.addEventListener("click",(function(t){!function(){const t=L.getUserInfo();p.value=t.profileName,h.value=t.profileDescription}(),f.open()})),d.addEventListener("click",(t=>{y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,