!function(){"use strict";class e{constructor(e,t,s,n,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=n,this._handleLikeClick=i,this._handleLikeDelete=r}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(),this._likeButton.classList.contains("card__like-button_active")?this._likeButton.classList.contains("card__like-button_active")&&this._handleLikeClick(this._id):this._handleLikeDelete(this._id)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}remove(){this._cardElement.remove()}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_getCardLike(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._isLiked||this._likeButton.classList.remove("card__like-button_active")}returnCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardDescription=this._cardElement.querySelector(".card__text"),this._cardImageElement=this._cardElement.querySelector(".card__img"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardDescription.textContent=this._name,this._getCardLike(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._options=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return Array.from(this._inputEls).every((e=>e.validity.valid))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(e){e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}enableValidation(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._inputEls.forEach((e=>{this._setEventListeners(e,this._submitButton)}))}}class s{constructor(e){this._popupElement=e,this._closeButton=this._popupElement.querySelector(".modal__close"),this._modalContainer=this._popupElement.querySelector(".js-modalContainer"),this._boundHandleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._boundHandleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._boundHandleEscapeClose)}_handleEscapeClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(()=>{this.close()})),this._modalContainer.addEventListener("click",(e=>{e.stopPropagation()}))}}class n extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelectorAll(".modal__container-input"),this._popupButton=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._popupButton.textContent="Saving...";const t=this._getInputValues();this._handleFormSubmit(t)}))}}const i={formSelector:".modal__container-form",inputSelector:".modal__container-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},r=document.querySelector("#card-modal"),o=document.querySelector("#edit-modal"),a=document.querySelector("#profile-image-modal"),l=o.querySelector(".modal__container-form"),c=r.querySelector(".modal__container-form"),d=a.querySelector(".modal__container-form"),u=document.querySelector("#image-modal"),_=document.querySelector("#trash-modal"),h=document.querySelector(".profile__image"),m=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__image_edit-button"),E=document.querySelector(".profile__add-button"),f=document.querySelector(".profile__title"),C=document.querySelector(".profile__description"),v=o.querySelector("#modal-name"),S=o.querySelector("#modal-description"),k=a.querySelector(".modal__container-input"),b=r.querySelector(".modal__button"),L=o.querySelector(".modal__button"),y=_.querySelector(".modal__button"),g=document.querySelector(".cards__list"),q=new t(i,l),I=new t(i,c),B=new t(i,d);q.enableValidation(),I.enableValidation(),B.enableValidation();const P=new class extends s{constructor(e){super(e)}open(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__image-description");t.src=e.link,t.alt=e.name,s.textContent=e.name,super.open()}}(u);P.setEventListeners();const x=new n(o,(function(e){F.updateProfileInfo({name:e.title,about:e.description}).then((()=>{w.setUserInfo({nameInput:e.title,descriptionInput:e.description}),x.close(),setTimeout((()=>{L.textContent="Save"}),500)}))})),D=new n(r,(function(e){const t=e.title,s=e.description;F.addCard({name:t,link:s}).then((()=>{H({name:t,link:s}),D.close(),c.reset(),I.toggleButtonState(),setTimeout((()=>{b.textContent="Create"}),500)}))}));x.setEventListeners(),D.setEventListeners();const j=new class extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__container-form"),this._inputList=this._popupElement.querySelector(".modal__container-input")}_getInputValues(){return this._inputList.value}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset()}))}}(a,(function(e){h.src=k.value,F.updateProfilePic(e),j.close()}));j.setEventListeners();const U=new class extends s{constructor(e,t){super(e),this._handleDeleteCardFormSubmit=t,this._deleteCardForm=this._popupElement.querySelector(".modal__container"),this._deleteCardButton=this._popupElement.querySelector(".modal__button")}setEventListeners(e){super.setEventListeners(),this._deleteCardForm.addEventListener("submit",(t=>{t.preventDefault(),this._deleteCardButton.textContent="Saving...",this._handleDeleteCardFormSubmit(e),this.close()}))}}(_,(function(e){F.deleteCard(e._id).then((()=>{e.remove(),setTimeout((()=>{y.textContent="Yes"}),500)}))})),w=new class{constructor(e){let{nameContainer:t,descriptionContainer:s}=e;this._nameContainer=t,this._descriptionContainer=s}getUserInfo(){const e={};return e.profileName=this._nameContainer.textContent,e.profileDescription=this._descriptionContainer.textContent,e}setUserInfo(e){this._nameContainer.textContent=e.nameInput,this._descriptionContainer.textContent=e.descriptionInput}}({nameContainer:f,descriptionContainer:C}),F=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject()}))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>{if(e.ok)return e.json();Promise.reject()}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.json()))}toggleCardLike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject()})).then((e=>{console.log(e)}))}toggleCardDislike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject()})).then((e=>{console.log(e)}))}getProfileInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject()}))}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>{e.ok?e.json():Promise.reject()}))}updateProfilePic(e){console.log(e),fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{e.ok?e.json():Promise.reject()}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1755563a-df02-4ecd-aa91-5c5958bedadf","Content-Type":"application/json"}}),$=new class{constructor(e,t){let{renderer:s}=e;this._render=s,this._container=t}renderItems(e){e.forEach((e=>this._render(e)))}addItem(e){this._container.prepend(e)}}({renderer:H},g);function V(e){P.open(e)}function T(e){U.open(),U.setEventListeners(e)}function N(e){F.toggleCardLike(e)}function A(e){F.toggleCardDislike(e)}function H(t){const s=new e(t,".card-template",V,T,N,A).returnCardElement();$.addItem(s)}F.getInitialCards().then((e=>{$.renderItems(e)})),F.getProfileInfo().then((e=>(h.src=e.avatar,w.setUserInfo({nameInput:e.name,descriptionInput:e.about})))),m.addEventListener("click",(function(e){!function(){const e=w.getUserInfo();v.value=e.profileName,S.value=e.profileDescription}(),x.open()})),E.addEventListener("click",(e=>{D.open()})),p.addEventListener("click",(()=>{j.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,